stages:
  - deploy
  - package
  - build
  - push


docker_deploy:
  image: alpine:latest
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
#    - echo "$LAPTOP_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - cat $LAPTOP_SSH_PRIVATE_KEY >> ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - touch ~/.ssh/known_hosts
    - echo "$LAPTOP_SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh -p $LAPTOP_SSH_PORT -i $LAPTOP_SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $LAPTOP_SSH_USER@$LAPTOP_SSH_URL "echo 'Welcome FROM GITLAB CI CD!!!' > welcome.txt"
    - ssh -p $LAPTOP_SSH_PORT -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $LAPTOP_SSH_USER@$LAPTOP_SSH_URL "cat welcome.txt"
job_build_project:
  image: maven:3-jdk-8
  stage: package
  script:
    - mvn -f pom.xml package
  artifacts:
    paths:
      - ./target/*.jar
    reports:
      junit: ./target/test-results/*.xml

docker_build:
  image: docker:20
  stage: build
  services:
    - docker:20-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/cpelyon/4eti-2022-2023/projet_clbd_g4_2022-2023:latest -f ./Dockerfile .
    - docker push $CI_REGISTRY/cpelyon/4eti-2022-2023/projet_clbd_g4_2022-2023:latest

docker_push:
  image: docker:20
  stage: push
  services:
    - docker:20-dind
  before_script:
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY
  script:
    - docker build -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_USER/$DOCKER_IMAGE_NAME:latest -f ./Dockerfile .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_USER/$DOCKER_IMAGE_NAME:latest


